{"ast":null,"code":"\"use strict\";\n\n/**\n * Provides some utility functions for somewhat efficiently modifying a\n * collection of headers.\n *\n * Note that this class only operates on ByteStrings (which is also why we use\n * toLowerCase internally).\n */\nrequire(\"core-js/modules/es.array.push.js\");\nclass HeaderList {\n  constructor() {\n    this.headers = new Map();\n  }\n  append(name, value) {\n    const existing = this.headers.get(name.toLowerCase());\n    if (existing) {\n      existing.push(value);\n    } else {\n      this.headers.set(name.toLowerCase(), [value]);\n    }\n  }\n  contains(name) {\n    return this.headers.has(name.toLowerCase());\n  }\n  get(name) {\n    name = name.toLowerCase();\n    const values = this.headers.get(name);\n    if (!values) {\n      return null;\n    }\n    return values;\n  }\n  delete(name) {\n    this.headers.delete(name.toLowerCase());\n  }\n  set(name, value) {\n    const lowerName = name.toLowerCase();\n    this.headers.delete(lowerName);\n    this.headers.set(lowerName, [value]);\n  }\n  sortAndCombine() {\n    const names = [...this.headers.keys()].sort();\n    const headers = [];\n    for (const name of names) {\n      if (name === \"set-cookie\") {\n        for (const value of this.get(name)) {\n          headers.push([name, value]);\n        }\n      } else {\n        headers.push([name, this.get(name).join(\", \")]);\n      }\n    }\n    return headers;\n  }\n}\nmodule.exports = HeaderList;","map":{"version":3,"names":["require","HeaderList","constructor","headers","Map","append","name","value","existing","get","toLowerCase","push","set","contains","has","values","delete","lowerName","sortAndCombine","names","keys","sort","join","module","exports"],"sources":["/Users/feyraf/Desktop/projets/Roma/invest/node_modules/jsdom/lib/jsdom/living/fetch/header-list.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Provides some utility functions for somewhat efficiently modifying a\n * collection of headers.\n *\n * Note that this class only operates on ByteStrings (which is also why we use\n * toLowerCase internally).\n */\nclass HeaderList {\n  constructor() {\n    this.headers = new Map();\n  }\n\n  append(name, value) {\n    const existing = this.headers.get(name.toLowerCase());\n    if (existing) {\n      existing.push(value);\n    } else {\n      this.headers.set(name.toLowerCase(), [value]);\n    }\n  }\n\n  contains(name) {\n    return this.headers.has(name.toLowerCase());\n  }\n\n  get(name) {\n    name = name.toLowerCase();\n    const values = this.headers.get(name);\n    if (!values) {\n      return null;\n    }\n    return values;\n  }\n\n  delete(name) {\n    this.headers.delete(name.toLowerCase());\n  }\n\n  set(name, value) {\n    const lowerName = name.toLowerCase();\n    this.headers.delete(lowerName);\n    this.headers.set(lowerName, [value]);\n  }\n\n  sortAndCombine() {\n    const names = [...this.headers.keys()].sort();\n\n    const headers = [];\n    for (const name of names) {\n      if (name === \"set-cookie\") {\n        for (const value of this.get(name)) {\n          headers.push([name, value]);\n        }\n      } else {\n        headers.push([name, this.get(name).join(\", \")]);\n      }\n    }\n\n    return headers;\n  }\n}\n\nmodule.exports = HeaderList;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AANAA,OAAA;AAOA,MAAMC,UAAU,CAAC;EACfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B;EAEAC,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAI,CAACL,OAAO,CAACM,GAAG,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;IACrD,IAAIF,QAAQ,EAAE;MACZA,QAAQ,CAACG,IAAI,CAACJ,KAAK,CAAC;IACtB,CAAC,MAAM;MACL,IAAI,CAACJ,OAAO,CAACS,GAAG,CAACN,IAAI,CAACI,WAAW,CAAC,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;IAC/C;EACF;EAEAM,QAAQA,CAACP,IAAI,EAAE;IACb,OAAO,IAAI,CAACH,OAAO,CAACW,GAAG,CAACR,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;EAC7C;EAEAD,GAAGA,CAACH,IAAI,EAAE;IACRA,IAAI,GAAGA,IAAI,CAACI,WAAW,CAAC,CAAC;IACzB,MAAMK,MAAM,GAAG,IAAI,CAACZ,OAAO,CAACM,GAAG,CAACH,IAAI,CAAC;IACrC,IAAI,CAACS,MAAM,EAAE;MACX,OAAO,IAAI;IACb;IACA,OAAOA,MAAM;EACf;EAEAC,MAAMA,CAACV,IAAI,EAAE;IACX,IAAI,CAACH,OAAO,CAACa,MAAM,CAACV,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;EACzC;EAEAE,GAAGA,CAACN,IAAI,EAAEC,KAAK,EAAE;IACf,MAAMU,SAAS,GAAGX,IAAI,CAACI,WAAW,CAAC,CAAC;IACpC,IAAI,CAACP,OAAO,CAACa,MAAM,CAACC,SAAS,CAAC;IAC9B,IAAI,CAACd,OAAO,CAACS,GAAG,CAACK,SAAS,EAAE,CAACV,KAAK,CAAC,CAAC;EACtC;EAEAW,cAAcA,CAAA,EAAG;IACf,MAAMC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAChB,OAAO,CAACiB,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAE7C,MAAMlB,OAAO,GAAG,EAAE;IAClB,KAAK,MAAMG,IAAI,IAAIa,KAAK,EAAE;MACxB,IAAIb,IAAI,KAAK,YAAY,EAAE;QACzB,KAAK,MAAMC,KAAK,IAAI,IAAI,CAACE,GAAG,CAACH,IAAI,CAAC,EAAE;UAClCH,OAAO,CAACQ,IAAI,CAAC,CAACL,IAAI,EAAEC,KAAK,CAAC,CAAC;QAC7B;MACF,CAAC,MAAM;QACLJ,OAAO,CAACQ,IAAI,CAAC,CAACL,IAAI,EAAE,IAAI,CAACG,GAAG,CAACH,IAAI,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;MACjD;IACF;IAEA,OAAOnB,OAAO;EAChB;AACF;AAEAoB,MAAM,CAACC,OAAO,GAAGvB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}