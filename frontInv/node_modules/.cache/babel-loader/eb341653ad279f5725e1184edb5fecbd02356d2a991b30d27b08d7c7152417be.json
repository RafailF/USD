{"ast":null,"code":"\"use strict\";\n\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst {\n  HttpProxyAgent\n} = require(\"http-proxy-agent\");\nconst {\n  HttpsProxyAgent\n} = require(\"https-proxy-agent\");\nmodule.exports = function agentFactory(proxy, rejectUnauthorized) {\n  const agentOpts = {\n    keepAlive: true,\n    rejectUnauthorized\n  };\n  if (proxy) {\n    return {\n      https: new HttpsProxyAgent(proxy, agentOpts),\n      http: new HttpProxyAgent(proxy, agentOpts)\n    };\n  }\n  return {\n    http: new http.Agent(agentOpts),\n    https: new https.Agent(agentOpts)\n  };\n};","map":{"version":3,"names":["http","require","https","HttpProxyAgent","HttpsProxyAgent","module","exports","agentFactory","proxy","rejectUnauthorized","agentOpts","keepAlive","Agent"],"sources":["/Users/feyraf/Desktop/projets/Roma/invest/node_modules/jsdom/lib/jsdom/living/helpers/agent-factory.js"],"sourcesContent":["\"use strict\";\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst { HttpProxyAgent } = require(\"http-proxy-agent\");\nconst { HttpsProxyAgent } = require(\"https-proxy-agent\");\n\nmodule.exports = function agentFactory(proxy, rejectUnauthorized) {\n  const agentOpts = { keepAlive: true, rejectUnauthorized };\n  if (proxy) {\n    return { https: new HttpsProxyAgent(proxy, agentOpts), http: new HttpProxyAgent(proxy, agentOpts) };\n  }\n  return { http: new http.Agent(agentOpts), https: new https.Agent(agentOpts) };\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEE;AAAe,CAAC,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AACtD,MAAM;EAAEG;AAAgB,CAAC,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAExDI,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAACC,KAAK,EAAEC,kBAAkB,EAAE;EAChE,MAAMC,SAAS,GAAG;IAAEC,SAAS,EAAE,IAAI;IAAEF;EAAmB,CAAC;EACzD,IAAID,KAAK,EAAE;IACT,OAAO;MAAEN,KAAK,EAAE,IAAIE,eAAe,CAACI,KAAK,EAAEE,SAAS,CAAC;MAAEV,IAAI,EAAE,IAAIG,cAAc,CAACK,KAAK,EAAEE,SAAS;IAAE,CAAC;EACrG;EACA,OAAO;IAAEV,IAAI,EAAE,IAAIA,IAAI,CAACY,KAAK,CAACF,SAAS,CAAC;IAAER,KAAK,EAAE,IAAIA,KAAK,CAACU,KAAK,CAACF,SAAS;EAAE,CAAC;AAC/E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}