{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/esnext.iterator.map.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.safeToString = exports.objectToString = void 0;\nexports.createPromiseCallback = createPromiseCallback;\nexports.inOperator = inOperator;\n/** Wrapped `Object.prototype.toString`, so that you don't need to remember to use `.call()`. */\nconst objectToString = obj => Object.prototype.toString.call(obj);\nexports.objectToString = objectToString;\n/**\n * Converts an array to string, safely handling symbols, null prototype objects, and recursive arrays.\n */\nconst safeArrayToString = (arr, seenArrays) => {\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString#description\n  if (typeof arr.join !== 'function') return (0, exports.objectToString)(arr);\n  seenArrays.add(arr);\n  const mapped = arr.map(val => val === null || val === undefined || seenArrays.has(val) ? '' : safeToStringImpl(val, seenArrays));\n  return mapped.join();\n};\nconst safeToStringImpl = (val, seenArrays = new WeakSet()) => {\n  // Using .toString() fails for null/undefined and implicit conversion (val + \"\") fails for symbols\n  // and objects with null prototype\n  if (typeof val !== 'object' || val === null) {\n    return String(val);\n  } else if (typeof val.toString === 'function') {\n    return Array.isArray(val) ?\n    // Arrays have a weird custom toString that we need to replicate\n    safeArrayToString(val, seenArrays) : String(val);\n  } else {\n    // This case should just be objects with null prototype, so we can just use Object#toString\n    return (0, exports.objectToString)(val);\n  }\n};\n/** Safely converts any value to string, using the value's own `toString` when available. */\nconst safeToString = val => safeToStringImpl(val);\nexports.safeToString = safeToString;\n/** Converts a callback into a utility object where either a callback or a promise can be used. */\nfunction createPromiseCallback(cb) {\n  let callback;\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  if (typeof cb === 'function') {\n    callback = (err, result) => {\n      try {\n        if (err) cb(err);\n        // If `err` is null, we know `result` must be `T`\n        // The assertion isn't *strictly* correct, as `T` could be nullish, but, ehh, good enough...\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        else cb(null, result);\n      } catch (e) {\n        reject(e instanceof Error ? e : new Error());\n      }\n    };\n  } else {\n    callback = (err, result) => {\n      try {\n        // If `err` is null, we know `result` must be `T`\n        // The assertion isn't *strictly* correct, as `T` could be nullish, but, ehh, good enough...\n        if (err) reject(err);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        else resolve(result);\n      } catch (e) {\n        reject(e instanceof Error ? e : new Error());\n      }\n    };\n  }\n  return {\n    promise,\n    callback,\n    resolve: value => {\n      callback(null, value);\n      return promise;\n    },\n    reject: error => {\n      callback(error);\n      return promise;\n    }\n  };\n}\nfunction inOperator(k, o) {\n  return k in o;\n}","map":{"version":3,"names":["require","Object","defineProperty","exports","value","safeToString","objectToString","createPromiseCallback","inOperator","obj","prototype","toString","call","safeArrayToString","arr","seenArrays","join","add","mapped","map","val","undefined","has","safeToStringImpl","WeakSet","String","Array","isArray","cb","callback","resolve","reject","promise","Promise","_resolve","_reject","err","result","e","Error","error","k","o"],"sources":["/Users/feyraf/Desktop/projets/Roma/invest/node_modules/tough-cookie/dist/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeToString = exports.objectToString = void 0;\nexports.createPromiseCallback = createPromiseCallback;\nexports.inOperator = inOperator;\n/** Wrapped `Object.prototype.toString`, so that you don't need to remember to use `.call()`. */\nconst objectToString = (obj) => Object.prototype.toString.call(obj);\nexports.objectToString = objectToString;\n/**\n * Converts an array to string, safely handling symbols, null prototype objects, and recursive arrays.\n */\nconst safeArrayToString = (arr, seenArrays) => {\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString#description\n    if (typeof arr.join !== 'function')\n        return (0, exports.objectToString)(arr);\n    seenArrays.add(arr);\n    const mapped = arr.map((val) => val === null || val === undefined || seenArrays.has(val)\n        ? ''\n        : safeToStringImpl(val, seenArrays));\n    return mapped.join();\n};\nconst safeToStringImpl = (val, seenArrays = new WeakSet()) => {\n    // Using .toString() fails for null/undefined and implicit conversion (val + \"\") fails for symbols\n    // and objects with null prototype\n    if (typeof val !== 'object' || val === null) {\n        return String(val);\n    }\n    else if (typeof val.toString === 'function') {\n        return Array.isArray(val)\n            ? // Arrays have a weird custom toString that we need to replicate\n                safeArrayToString(val, seenArrays)\n            : String(val);\n    }\n    else {\n        // This case should just be objects with null prototype, so we can just use Object#toString\n        return (0, exports.objectToString)(val);\n    }\n};\n/** Safely converts any value to string, using the value's own `toString` when available. */\nconst safeToString = (val) => safeToStringImpl(val);\nexports.safeToString = safeToString;\n/** Converts a callback into a utility object where either a callback or a promise can be used. */\nfunction createPromiseCallback(cb) {\n    let callback;\n    let resolve;\n    let reject;\n    const promise = new Promise((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n    });\n    if (typeof cb === 'function') {\n        callback = (err, result) => {\n            try {\n                if (err)\n                    cb(err);\n                // If `err` is null, we know `result` must be `T`\n                // The assertion isn't *strictly* correct, as `T` could be nullish, but, ehh, good enough...\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                else\n                    cb(null, result);\n            }\n            catch (e) {\n                reject(e instanceof Error ? e : new Error());\n            }\n        };\n    }\n    else {\n        callback = (err, result) => {\n            try {\n                // If `err` is null, we know `result` must be `T`\n                // The assertion isn't *strictly* correct, as `T` could be nullish, but, ehh, good enough...\n                if (err)\n                    reject(err);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                else\n                    resolve(result);\n            }\n            catch (e) {\n                reject(e instanceof Error ? e : new Error());\n            }\n        };\n    }\n    return {\n        promise,\n        callback,\n        resolve: (value) => {\n            callback(null, value);\n            return promise;\n        },\n        reject: (error) => {\n            callback(error);\n            return promise;\n        },\n    };\n}\nfunction inOperator(k, o) {\n    return k in o;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}