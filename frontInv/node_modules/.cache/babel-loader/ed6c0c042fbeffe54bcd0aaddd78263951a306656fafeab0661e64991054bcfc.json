{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst {\n  getLabelsForLabelable\n} = require(\"../helpers/form-controls\");\nconst {\n  parseFloatingPointNumber\n} = require(\"../helpers/strings\");\nclass HTMLProgressElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._labels = null;\n  }\n  get _isDeterminate() {\n    return this.hasAttributeNS(null, \"value\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\n  get _value() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    if (valueAttr !== null) {\n      const parsedValue = parseFloatingPointNumber(valueAttr);\n      if (parsedValue !== null && parsedValue > 0) {\n        return parsedValue;\n      }\n    }\n    return 0;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\n  get _currentValue() {\n    const value = this._value;\n    return value > this._maximumValue ? this._maximumValue : value;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-maximum\n  get _maximumValue() {\n    const maxAttr = this.getAttributeNS(null, \"max\");\n    if (maxAttr !== null) {\n      const parsedMax = parseFloatingPointNumber(maxAttr);\n      if (parsedMax !== null && parsedMax > 0) {\n        return parsedMax;\n      }\n    }\n    return 1.0;\n  }\n  get value() {\n    if (this._isDeterminate) {\n      return this._currentValue;\n    }\n    return 0;\n  }\n  set value(value) {\n    this.setAttributeNS(null, \"value\", value);\n  }\n  get position() {\n    if (!this._isDeterminate) {\n      return -1;\n    }\n    return this._currentValue / this._maximumValue;\n  }\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n}\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","getLabelsForLabelable","parseFloatingPointNumber","HTMLProgressElementImpl","constructor","globalObject","args","privateData","_labels","_isDeterminate","hasAttributeNS","_value","valueAttr","getAttributeNS","parsedValue","_currentValue","value","_maximumValue","maxAttr","parsedMax","setAttributeNS","position","labels","module","exports"],"sources":["/Users/feyraf/Desktop/projets/Roma/invest/node_modules/jsdom/lib/jsdom/living/nodes/HTMLProgressElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { getLabelsForLabelable } = require(\"../helpers/form-controls\");\nconst { parseFloatingPointNumber } = require(\"../helpers/strings\");\n\nclass HTMLProgressElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._labels = null;\n  }\n\n  get _isDeterminate() {\n    return this.hasAttributeNS(null, \"value\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\n  get _value() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    if (valueAttr !== null) {\n      const parsedValue = parseFloatingPointNumber(valueAttr);\n      if (parsedValue !== null && parsedValue > 0) {\n        return parsedValue;\n      }\n    }\n    return 0;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\n  get _currentValue() {\n    const value = this._value;\n    return value > this._maximumValue ? this._maximumValue : value;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-maximum\n  get _maximumValue() {\n    const maxAttr = this.getAttributeNS(null, \"max\");\n    if (maxAttr !== null) {\n      const parsedMax = parseFloatingPointNumber(maxAttr);\n      if (parsedMax !== null && parsedMax > 0) {\n        return parsedMax;\n      }\n    }\n    return 1.0;\n  }\n\n  get value() {\n    if (this._isDeterminate) {\n      return this._currentValue;\n    }\n    return 0;\n  }\n  set value(value) {\n    this.setAttributeNS(null, \"value\", value);\n  }\n\n  get position() {\n    if (!this._isDeterminate) {\n      return -1;\n    }\n\n    return this._currentValue / this._maximumValue;\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACC,cAAc;AACpE,MAAM;EAAEC;AAAsB,CAAC,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AACrE,MAAM;EAAEG;AAAyB,CAAC,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAElE,MAAMI,uBAAuB,SAASL,eAAe,CAAC;EACpDM,WAAWA,CAACC,YAAY,EAAEC,IAAI,EAAEC,WAAW,EAAE;IAC3C,KAAK,CAACF,YAAY,EAAEC,IAAI,EAAEC,WAAW,CAAC;IACtC,IAAI,CAACC,OAAO,GAAG,IAAI;EACrB;EAEA,IAAIC,cAAcA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC;EAC3C;;EAEA;EACA,IAAIC,MAAMA,CAAA,EAAG;IACX,MAAMC,SAAS,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC;IACpD,IAAID,SAAS,KAAK,IAAI,EAAE;MACtB,MAAME,WAAW,GAAGZ,wBAAwB,CAACU,SAAS,CAAC;MACvD,IAAIE,WAAW,KAAK,IAAI,IAAIA,WAAW,GAAG,CAAC,EAAE;QAC3C,OAAOA,WAAW;MACpB;IACF;IACA,OAAO,CAAC;EACV;;EAEA;EACA,IAAIC,aAAaA,CAAA,EAAG;IAClB,MAAMC,KAAK,GAAG,IAAI,CAACL,MAAM;IACzB,OAAOK,KAAK,GAAG,IAAI,CAACC,aAAa,GAAG,IAAI,CAACA,aAAa,GAAGD,KAAK;EAChE;;EAEA;EACA,IAAIC,aAAaA,CAAA,EAAG;IAClB,MAAMC,OAAO,GAAG,IAAI,CAACL,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC;IAChD,IAAIK,OAAO,KAAK,IAAI,EAAE;MACpB,MAAMC,SAAS,GAAGjB,wBAAwB,CAACgB,OAAO,CAAC;MACnD,IAAIC,SAAS,KAAK,IAAI,IAAIA,SAAS,GAAG,CAAC,EAAE;QACvC,OAAOA,SAAS;MAClB;IACF;IACA,OAAO,GAAG;EACZ;EAEA,IAAIH,KAAKA,CAAA,EAAG;IACV,IAAI,IAAI,CAACP,cAAc,EAAE;MACvB,OAAO,IAAI,CAACM,aAAa;IAC3B;IACA,OAAO,CAAC;EACV;EACA,IAAIC,KAAKA,CAACA,KAAK,EAAE;IACf,IAAI,CAACI,cAAc,CAAC,IAAI,EAAE,OAAO,EAAEJ,KAAK,CAAC;EAC3C;EAEA,IAAIK,QAAQA,CAAA,EAAG;IACb,IAAI,CAAC,IAAI,CAACZ,cAAc,EAAE;MACxB,OAAO,CAAC,CAAC;IACX;IAEA,OAAO,IAAI,CAACM,aAAa,GAAG,IAAI,CAACE,aAAa;EAChD;EAEA,IAAIK,MAAMA,CAAA,EAAG;IACX,OAAOrB,qBAAqB,CAAC,IAAI,CAAC;EACpC;AACF;AAEAsB,MAAM,CAACC,OAAO,GAAG;EACfxB,cAAc,EAAEG;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}