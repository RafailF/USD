{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.set.difference.v2.js\");\nrequire(\"core-js/modules/es.set.intersection.v2.js\");\nrequire(\"core-js/modules/es.set.is-disjoint-from.v2.js\");\nrequire(\"core-js/modules/es.set.is-subset-of.v2.js\");\nrequire(\"core-js/modules/es.set.is-superset-of.v2.js\");\nrequire(\"core-js/modules/es.set.symmetric-difference.v2.js\");\nrequire(\"core-js/modules/es.set.union.v2.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialize = serialize;\nexports.serializeOuter = serializeOuter;\nconst html_js_1 = require(\"../common/html.js\");\nconst escape_js_1 = require(\"entities/lib/escape.js\");\nconst default_js_1 = require(\"../tree-adapters/default.js\");\n// Sets\nconst VOID_ELEMENTS = new Set([html_js_1.TAG_NAMES.AREA, html_js_1.TAG_NAMES.BASE, html_js_1.TAG_NAMES.BASEFONT, html_js_1.TAG_NAMES.BGSOUND, html_js_1.TAG_NAMES.BR, html_js_1.TAG_NAMES.COL, html_js_1.TAG_NAMES.EMBED, html_js_1.TAG_NAMES.FRAME, html_js_1.TAG_NAMES.HR, html_js_1.TAG_NAMES.IMG, html_js_1.TAG_NAMES.INPUT, html_js_1.TAG_NAMES.KEYGEN, html_js_1.TAG_NAMES.LINK, html_js_1.TAG_NAMES.META, html_js_1.TAG_NAMES.PARAM, html_js_1.TAG_NAMES.SOURCE, html_js_1.TAG_NAMES.TRACK, html_js_1.TAG_NAMES.WBR]);\nfunction isVoidElement(node, options) {\n  return options.treeAdapter.isElementNode(node) && options.treeAdapter.getNamespaceURI(node) === html_js_1.NS.HTML && VOID_ELEMENTS.has(options.treeAdapter.getTagName(node));\n}\nconst defaultOpts = {\n  treeAdapter: default_js_1.defaultTreeAdapter,\n  scriptingEnabled: true\n};\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nfunction serialize(node, options) {\n  const opts = Object.assign(Object.assign({}, defaultOpts), options);\n  if (isVoidElement(node, opts)) {\n    return '';\n  }\n  return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nfunction serializeOuter(node, options) {\n  const opts = Object.assign(Object.assign({}, defaultOpts), options);\n  return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n  let html = '';\n  // Get container of the child nodes\n  const container = options.treeAdapter.isElementNode(parentNode) && options.treeAdapter.getTagName(parentNode) === html_js_1.TAG_NAMES.TEMPLATE && options.treeAdapter.getNamespaceURI(parentNode) === html_js_1.NS.HTML ? options.treeAdapter.getTemplateContent(parentNode) : parentNode;\n  const childNodes = options.treeAdapter.getChildNodes(container);\n  if (childNodes) {\n    for (const currentNode of childNodes) {\n      html += serializeNode(currentNode, options);\n    }\n  }\n  return html;\n}\nfunction serializeNode(node, options) {\n  if (options.treeAdapter.isElementNode(node)) {\n    return serializeElement(node, options);\n  }\n  if (options.treeAdapter.isTextNode(node)) {\n    return serializeTextNode(node, options);\n  }\n  if (options.treeAdapter.isCommentNode(node)) {\n    return serializeCommentNode(node, options);\n  }\n  if (options.treeAdapter.isDocumentTypeNode(node)) {\n    return serializeDocumentTypeNode(node, options);\n  }\n  // Return an empty string for unknown nodes\n  return '';\n}\nfunction serializeElement(node, options) {\n  const tn = options.treeAdapter.getTagName(node);\n  return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, {\n  treeAdapter\n}) {\n  let html = '';\n  for (const attr of treeAdapter.getAttrList(node)) {\n    html += ' ';\n    if (attr.namespace) {\n      switch (attr.namespace) {\n        case html_js_1.NS.XML:\n          {\n            html += `xml:${attr.name}`;\n            break;\n          }\n        case html_js_1.NS.XMLNS:\n          {\n            if (attr.name !== 'xmlns') {\n              html += 'xmlns:';\n            }\n            html += attr.name;\n            break;\n          }\n        case html_js_1.NS.XLINK:\n          {\n            html += `xlink:${attr.name}`;\n            break;\n          }\n        default:\n          {\n            html += `${attr.prefix}:${attr.name}`;\n          }\n      }\n    } else {\n      html += attr.name;\n    }\n    html += `=\"${(0, escape_js_1.escapeAttribute)(attr.value)}\"`;\n  }\n  return html;\n}\nfunction serializeTextNode(node, options) {\n  const {\n    treeAdapter\n  } = options;\n  const content = treeAdapter.getTextNodeContent(node);\n  const parent = treeAdapter.getParentNode(node);\n  const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n  return parentTn && treeAdapter.getNamespaceURI(parent) === html_js_1.NS.HTML && (0, html_js_1.hasUnescapedText)(parentTn, options.scriptingEnabled) ? content : (0, escape_js_1.escapeText)(content);\n}\nfunction serializeCommentNode(node, {\n  treeAdapter\n}) {\n  return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, {\n  treeAdapter\n}) {\n  return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}","map":{"version":3,"names":["require","Object","defineProperty","exports","value","serialize","serializeOuter","html_js_1","escape_js_1","default_js_1","VOID_ELEMENTS","Set","TAG_NAMES","AREA","BASE","BASEFONT","BGSOUND","BR","COL","EMBED","FRAME","HR","IMG","INPUT","KEYGEN","LINK","META","PARAM","SOURCE","TRACK","WBR","isVoidElement","node","options","treeAdapter","isElementNode","getNamespaceURI","NS","HTML","has","getTagName","defaultOpts","defaultTreeAdapter","scriptingEnabled","opts","assign","serializeChildNodes","serializeNode","parentNode","html","container","TEMPLATE","getTemplateContent","childNodes","getChildNodes","currentNode","serializeElement","isTextNode","serializeTextNode","isCommentNode","serializeCommentNode","isDocumentTypeNode","serializeDocumentTypeNode","tn","serializeAttributes","attr","getAttrList","namespace","XML","name","XMLNS","XLINK","prefix","escapeAttribute","content","getTextNodeContent","parent","getParentNode","parentTn","hasUnescapedText","escapeText","getCommentNodeContent","getDocumentTypeNodeName"],"sources":["/Users/feyraf/Desktop/projets/Roma/invest/node_modules/jsdom/node_modules/parse5/dist/cjs/serializer/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = serialize;\nexports.serializeOuter = serializeOuter;\nconst html_js_1 = require(\"../common/html.js\");\nconst escape_js_1 = require(\"entities/lib/escape.js\");\nconst default_js_1 = require(\"../tree-adapters/default.js\");\n// Sets\nconst VOID_ELEMENTS = new Set([\n    html_js_1.TAG_NAMES.AREA,\n    html_js_1.TAG_NAMES.BASE,\n    html_js_1.TAG_NAMES.BASEFONT,\n    html_js_1.TAG_NAMES.BGSOUND,\n    html_js_1.TAG_NAMES.BR,\n    html_js_1.TAG_NAMES.COL,\n    html_js_1.TAG_NAMES.EMBED,\n    html_js_1.TAG_NAMES.FRAME,\n    html_js_1.TAG_NAMES.HR,\n    html_js_1.TAG_NAMES.IMG,\n    html_js_1.TAG_NAMES.INPUT,\n    html_js_1.TAG_NAMES.KEYGEN,\n    html_js_1.TAG_NAMES.LINK,\n    html_js_1.TAG_NAMES.META,\n    html_js_1.TAG_NAMES.PARAM,\n    html_js_1.TAG_NAMES.SOURCE,\n    html_js_1.TAG_NAMES.TRACK,\n    html_js_1.TAG_NAMES.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === html_js_1.NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: default_js_1.defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nfunction serialize(node, options) {\n    const opts = Object.assign(Object.assign({}, defaultOpts), options);\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nfunction serializeOuter(node, options) {\n    const opts = Object.assign(Object.assign({}, defaultOpts), options);\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === html_js_1.TAG_NAMES.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === html_js_1.NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case html_js_1.NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case html_js_1.NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case html_js_1.NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${(0, escape_js_1.escapeAttribute)(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === html_js_1.NS.HTML &&\n        (0, html_js_1.hasUnescapedText)(parentTn, options.scriptingEnabled)\n        ? content\n        : (0, escape_js_1.escapeText)(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}