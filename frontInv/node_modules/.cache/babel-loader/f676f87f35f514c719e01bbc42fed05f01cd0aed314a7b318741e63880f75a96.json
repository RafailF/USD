{"ast":null,"code":"const defaultOpts = {\n  _useHtmlParser2: false\n};\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @param baseOptions - The base options to use.\n * @returns The flattened options.\n */\nexport function flattenOptions(options, baseOptions) {\n  if (!options) {\n    return baseOptions !== null && baseOptions !== void 0 ? baseOptions : defaultOpts;\n  }\n  const opts = {\n    _useHtmlParser2: !!options.xmlMode,\n    ...baseOptions,\n    ...options\n  };\n  if (options.xml) {\n    opts._useHtmlParser2 = true;\n    opts.xmlMode = true;\n    if (options.xml !== true) {\n      Object.assign(opts, options.xml);\n    }\n  } else if (options.xmlMode) {\n    opts._useHtmlParser2 = true;\n  }\n  return opts;\n}","map":{"version":3,"names":["defaultOpts","_useHtmlParser2","flattenOptions","options","baseOptions","opts","xmlMode","xml","Object","assign"],"sources":["../../src/options.ts"],"sourcesContent":[null],"mappings":"AA+FA,MAAMA,WAAW,GAAoB;EACnCC,eAAe,EAAE;CAClB;AAED;;;;;;;;;AASA,OAAM,SAAUC,cAAcA,CAC5BC,OAA+B,EAC/BC,WAA6B;EAE7B,IAAI,CAACD,OAAO,EAAE;IACZ,OAAOC,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAIJ,WAAW;EACnC;EAEA,MAAMK,IAAI,GAAoB;IAC5BJ,eAAe,EAAE,CAAC,CAACE,OAAO,CAACG,OAAO;IAClC,GAAGF,WAAW;IACd,GAAGD;GACJ;EAED,IAAIA,OAAO,CAACI,GAAG,EAAE;IACfF,IAAI,CAACJ,eAAe,GAAG,IAAI;IAC3BI,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAIH,OAAO,CAACI,GAAG,KAAK,IAAI,EAAE;MACxBC,MAAM,CAACC,MAAM,CAACJ,IAAI,EAAEF,OAAO,CAACI,GAAG,CAAC;IAClC;EACF,CAAC,MAAM,IAAIJ,OAAO,CAACG,OAAO,EAAE;IAC1BD,IAAI,CAACJ,eAAe,GAAG,IAAI;EAC7B;EAEA,OAAOI,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}