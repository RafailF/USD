{"ast":null,"code":"\"use strict\";\n\n// disabling this lint on this whole file because Store should be abstract\n// but we have implementations in the wild that may not implement all features\n/* eslint-disable @typescript-eslint/no-unused-vars */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Store = void 0;\n/**\n * Base class for {@link CookieJar} stores.\n *\n * The storage model for each {@link CookieJar} instance can be replaced with a custom implementation. The default is\n * {@link MemoryCookieStore}.\n *\n * @remarks\n * - Stores should inherit from the base Store class, which is available as a top-level export.\n *\n * - Stores are asynchronous by default, but if {@link Store.synchronous} is set to true, then the `*Sync` methods\n *     of the containing {@link CookieJar} can be used.\n *\n * @public\n */\nclass Store {\n  constructor() {\n    this.synchronous = false;\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  findCookie(_domain, _path, _key, _callback) {\n    throw new Error('findCookie is not implemented');\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  findCookies(_domain, _path, _allowSpecialUseDomain = false, _callback) {\n    throw new Error('findCookies is not implemented');\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  putCookie(_cookie, _callback) {\n    throw new Error('putCookie is not implemented');\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  updateCookie(_oldCookie, _newCookie, _callback) {\n    // recommended default implementation:\n    // return this.putCookie(newCookie, cb);\n    throw new Error('updateCookie is not implemented');\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeCookie(_domain, _path, _key, _callback) {\n    throw new Error('removeCookie is not implemented');\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeCookies(_domain, _path, _callback) {\n    throw new Error('removeCookies is not implemented');\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeAllCookies(_callback) {\n    throw new Error('removeAllCookies is not implemented');\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  getAllCookies(_callback) {\n    throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');\n  }\n}\nexports.Store = Store;","map":{"version":3,"names":["Object","defineProperty","exports","value","Store","constructor","synchronous","findCookie","_domain","_path","_key","_callback","Error","findCookies","_allowSpecialUseDomain","putCookie","_cookie","updateCookie","_oldCookie","_newCookie","removeCookie","removeCookies","removeAllCookies","getAllCookies"],"sources":["/Users/feyraf/Desktop/projets/Roma/invest/node_modules/tough-cookie/dist/store.js"],"sourcesContent":["\"use strict\";\n// disabling this lint on this whole file because Store should be abstract\n// but we have implementations in the wild that may not implement all features\n/* eslint-disable @typescript-eslint/no-unused-vars */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Store = void 0;\n/**\n * Base class for {@link CookieJar} stores.\n *\n * The storage model for each {@link CookieJar} instance can be replaced with a custom implementation. The default is\n * {@link MemoryCookieStore}.\n *\n * @remarks\n * - Stores should inherit from the base Store class, which is available as a top-level export.\n *\n * - Stores are asynchronous by default, but if {@link Store.synchronous} is set to true, then the `*Sync` methods\n *     of the containing {@link CookieJar} can be used.\n *\n * @public\n */\nclass Store {\n    constructor() {\n        this.synchronous = false;\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    findCookie(_domain, _path, _key, _callback) {\n        throw new Error('findCookie is not implemented');\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    findCookies(_domain, _path, _allowSpecialUseDomain = false, _callback) {\n        throw new Error('findCookies is not implemented');\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    putCookie(_cookie, _callback) {\n        throw new Error('putCookie is not implemented');\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    updateCookie(_oldCookie, _newCookie, _callback) {\n        // recommended default implementation:\n        // return this.putCookie(newCookie, cb);\n        throw new Error('updateCookie is not implemented');\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    removeCookie(_domain, _path, _key, _callback) {\n        throw new Error('removeCookie is not implemented');\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    removeCookies(_domain, _path, _callback) {\n        throw new Error('removeCookies is not implemented');\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    removeAllCookies(_callback) {\n        throw new Error('removeAllCookies is not implemented');\n    }\n    /**\n     * @internal No doc because this is an overload that supports the implementation\n     */\n    getAllCookies(_callback) {\n        throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');\n    }\n}\nexports.Store = Store;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,KAAK,CAAC;EACRC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,WAAW,GAAG,KAAK;EAC5B;EACA;AACJ;AACA;EACIC,UAAUA,CAACC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAE;IACxC,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EACpD;EACA;AACJ;AACA;EACIC,WAAWA,CAACL,OAAO,EAAEC,KAAK,EAAEK,sBAAsB,GAAG,KAAK,EAAEH,SAAS,EAAE;IACnE,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACrD;EACA;AACJ;AACA;EACIG,SAASA,CAACC,OAAO,EAAEL,SAAS,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACnD;EACA;AACJ;AACA;EACIK,YAAYA,CAACC,UAAU,EAAEC,UAAU,EAAER,SAAS,EAAE;IAC5C;IACA;IACA,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACtD;EACA;AACJ;AACA;EACIQ,YAAYA,CAACZ,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAE;IAC1C,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACtD;EACA;AACJ;AACA;EACIS,aAAaA,CAACb,OAAO,EAAEC,KAAK,EAAEE,SAAS,EAAE;IACrC,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACvD;EACA;AACJ;AACA;EACIU,gBAAgBA,CAACX,SAAS,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA;AACJ;AACA;EACIW,aAAaA,CAACZ,SAAS,EAAE;IACrB,MAAM,IAAIC,KAAK,CAAC,uEAAuE,CAAC;EAC5F;AACJ;AACAV,OAAO,CAACE,KAAK,GAAGA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}